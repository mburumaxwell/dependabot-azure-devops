@description('Location for all resources.')
param location string = resourceGroup().location

@description('Name of the resources.')
@minLength(4)
@maxLength(23)
param name string = 'paklo'

/* Managed Identity */
resource managedIdentity 'Microsoft.ManagedIdentity/userAssignedIdentities@2024-11-30' = {
  name: name
  location: location
}

/* LogAnalytics */
resource logAnalyticsWorkspace 'Microsoft.OperationalInsights/workspaces@2025-02-01' = {
  name: name
  location: location
  properties: {
    sku: {
      name: 'PerGB2018'
    }
    workspaceCapping: {
      dailyQuotaGb: json('0.167') // low so as not to pass the 5GB limit per subscription
    }
  }
}

resource appServicePlan 'Microsoft.Web/serverfarms@2024-04-01' = {
  name: name
  location: location
  kind: 'linux'
  properties: {
    reserved: true
    zoneRedundant: false // only for Premium tiers
  }
  sku: {
    name: 'F1'
  }
}

/* Application Insights */
resource appInsightsWeb 'Microsoft.Insights/components@2020-02-02' = {
  name: '${name}-website'
  location: location
  kind: 'web'
  properties: {
    Application_Type: 'web'
    WorkspaceResourceId: logAnalyticsWorkspace.id
  }
}

/* Static WebApp */
resource staticWebAppWebsite 'Microsoft.Web/staticSites@2024-04-01' = {
  name: '${name}-website'
  location: location
  properties: {
    repositoryUrl: 'https://github.com/mburumaxwell/packlo'
    branch: 'main'
    stagingEnvironmentPolicy: 'Enabled'
    allowConfigFileUpdates: true
    provider: 'GitHub'
    enterpriseGradeCdnStatus: 'Disabled'
    #disable-next-line BCP037
    areStaticSitesDistributedBackendsEnabled: false
    #disable-next-line BCP037
    trafficSplitting: { environmentDistribution: { default: 100 } }
    publicNetworkAccess: 'Enabled'
  }
  sku: {
    name: 'Free'
    tier: 'Free'
  }
  // identity: { type: 'UserAssigned', userAssignedIdentities: { '${managedIdentity.id}': {} } }
}

/** WebApp */
resource websiteApp 'Microsoft.Web/sites@2024-04-01' = {
  name: '${name}-website'
  location: location
  properties: {
    serverFarmId: appServicePlan.id
    clientAffinityEnabled: false
    // virtualNetworkSubnetId: null
    httpsOnly: true
    publicNetworkAccess: 'Enabled'
    autoGeneratedDomainNameLabelScope: 'ResourceGroupReuse'
    siteConfig: {
      linuxFxVersion: 'NODE|22-lts'
    }
  }

  resource scmCredentials 'basicPublishingCredentialsPolicies' = { name: 'scm', properties: { allow: false } }
  resource ftpCredentials 'basicPublishingCredentialsPolicies' = { name: 'ftp', properties: { allow: false } }

  resource siteConfig 'config' = {
    name: 'web'
    properties: {
      linuxFxVersion: 'NODE|22-lts'
      appCommandLine: 'node server.js'
    }
  }
}
