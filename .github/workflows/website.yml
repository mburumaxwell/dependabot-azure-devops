name: Website

on:
  workflow_dispatch:
  push:
    branches: [main]
    # tags: ['website*']
    paths:
      - 'apps/website/**'
      - '.github/workflows/website.yml'
  pull_request:
    branches: [main]
    paths:
      - 'apps/website/**'
      - '.github/workflows/website.yml'
      - 'packages/cli/package.json'

permissions:
  contents: read
  pull-requests: write # required to write PR comment

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  # wait for previous runs to complete on main and tags
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' && !startsWith(github.ref, 'refs/tags/') }}

env:
  NEXT_TELEMETRY_DISABLED: 1 # Disable Next.js telemetry
  TURBO_TELEMETRY_DISABLED: 1 # Disable Turbo telemetry

  WEB_APP_SLOT_FOR_PR: ${{ (github.event_name == 'pull_request' && format('ra{0}', github.event.pull_request.number)) || 'Production' }}

  GITHUB_SHA: ${{ github.sha }} # not discovered by default
  GITHUB_REF_NAME: ${{ github.ref_name }} # not discovered by default
  RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}

jobs:
  Website:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          submodules: true

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup node
        uses: actions/setup-node@v6
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Setup turborepo caching
        uses: rharkor/caching-for-turbo@v2.3.2

      - name: Download deps
        run: pnpm install
        working-directory: '${{ github.workspace }}/apps/website'

      - name: Restore .next/cache
        id: cache-next-restore
        uses: actions/cache/restore@v4
        with:
          path: ${{ github.workspace }}/apps/website/.next/cache
          key: ${{ runner.os }}-next-website-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-next-website

      - name: Build
        run: pnpm turbo build
        working-directory: '${{ github.workspace }}/apps/website'

      - name: Lint
        run: pnpm turbo lint
        working-directory: '${{ github.workspace }}/apps/website'

      - name: Test
        run: pnpm turbo test
        working-directory: '${{ github.workspace }}/apps/website'

      # https://github.com/Azure/static-web-apps/issues/1059#issuecomment-1638817705
      # https://learn.microsoft.com/en-us/azure/static-web-apps/deploy-nextjs-hybrid#enable-standalone-feature
      # https://medium.com/@wdedweliwaththa/the-ultimate-guide-to-deploying-next-js-a1501de3e4d0
      - name: Copy standalone output files
        run: |
          cp -r .next/standalone/apps/website/. .next/standalone && \
          cp -r .next/static .next/standalone/.next/ && \
          cp -r public .next/standalone/ && \
          echo 'Done'
        working-directory: '${{ github.workspace }}/apps/website'

      # Using Vercel for now (much faster) but we need the workflow to validate builds especially for dependabot PRs
      # - name: Azure Login
      #   if: ${{ !contains(github.actor, '[bot]') }}
      #   uses: azure/login@v2
      #   with:
      #     creds: ${{ secrets.AZURE_CREDENTIALS }}

      # - name: Deploy to Azure Web App
      #   uses: azure/webapps-deploy@v3
      #   id: web-app
      #   # if: ${{ !contains(github.actor, '[bot]') }}
      #   if: ${{ startsWith(github.ref, 'refs/heads/main') }}
      #   timeout-minutes: 2
      #   with:
      #     app-name: paklo-website
      #     slot-name: ${{ env.WEB_APP_SLOT_FOR_PR }}
      #     package: ./apps/website/.next/standalone
      #     clean: true
      #     restart: true

      # - name: Set app settings for Web App # bear in mind that this creates or updates but does not remove
      #   uses: azure/cli@v2
      #   # if: ${{ !contains(github.actor, '[bot]') }}
      #   if: ${{ startsWith(github.ref, 'refs/heads/main') }}
      #   with:
      #     inlineScript: >
      #       az webapp config appsettings set
      #       --resource-group ${{ env. RESOURCE_GROUP }}
      #       --name paklo-website
      #       ${{ env.WEB_APP_SLOT_FOR_PR != 'Production' && format('--slot {0}', env.WEB_APP_SLOT_FOR_PR) || '' }}
      #       --settings ${{ env.APP_SETTINGS }}
      #   env:
      #     APP_SETTINGS: >
      #       GITHUB_SHA="${{ github.sha }}"
      #       GITHUB_REF_NAME="${{ github.ref_name }}"

      # - name: Publish review app URLs
      #   uses: thollander/actions-comment-pull-request@v3
      #   # remove false once we are deploying to slots or ACA
      #   if: ${{ false && !contains(github.actor, '[bot]') && github.event_name == 'pull_request' }}
      #   with:
      #     message: |
      #       Review App for `website` succeeded.
      #       [Preview](${{ steps.web-app.outputs.webapp-url }})
      #     comment-tag: website

      - name: Save .next/cache
        if: always() && steps.cache-next-restore.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: ${{ github.workspace }}/apps/website/.next/cache
          key: ${{ steps.cache-next-restore.outputs.cache-primary-key }}
